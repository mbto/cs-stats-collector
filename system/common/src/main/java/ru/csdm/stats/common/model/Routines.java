/*
 * This file is generated by jOOQ.
 */
package ru.csdm.stats.common.model;


import org.jooq.Configuration;
import org.jooq.Field;
import org.jooq.types.UInteger;
import ru.csdm.stats.common.model.routines.*;


/**
 * Convenience access to all stored procedures and functions in csstats
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Routines {

    /**
     * Call <code>csstats.build_human_time</code>
     */
    public static String buildHumanTime(Configuration configuration, UInteger timeSecs) {
        BuildHumanTime f = new BuildHumanTime();
        f.setTimeSecs(timeSecs);

        f.execute(configuration);
        return f.getReturnValue();
    }

    /**
     * Get <code>csstats.build_human_time</code> as a field.
     */
    public static Field<String> buildHumanTime(UInteger timeSecs) {
        BuildHumanTime f = new BuildHumanTime();
        f.setTimeSecs(timeSecs);

        return f.asField();
    }

    /**
     * Get <code>csstats.build_human_time</code> as a field.
     */
    public static Field<String> buildHumanTime(Field<UInteger> timeSecs) {
        BuildHumanTime f = new BuildHumanTime();
        f.setTimeSecs(timeSecs);

        return f.asField();
    }

    /**
     * Call <code>csstats.build_stars</code>
     */
    public static String buildStars(Configuration configuration, UInteger level, UInteger ranksTotal) {
        BuildStars f = new BuildStars();
        f.setLevel(level);
        f.setRanksTotal(ranksTotal);

        f.execute(configuration);
        return f.getReturnValue();
    }

    /**
     * Get <code>csstats.build_stars</code> as a field.
     */
    public static Field<String> buildStars(UInteger level, UInteger ranksTotal) {
        BuildStars f = new BuildStars();
        f.setLevel(level);
        f.setRanksTotal(ranksTotal);

        return f.asField();
    }

    /**
     * Get <code>csstats.build_stars</code> as a field.
     */
    public static Field<String> buildStars(Field<UInteger> level, Field<UInteger> ranksTotal) {
        BuildStars f = new BuildStars();
        f.setLevel(level);
        f.setRanksTotal(ranksTotal);

        return f.asField();
    }

    /**
     * Call <code>csstats.calculate_rank_id</code>
     */
    public static UInteger calculateRankId(Configuration configuration, UInteger kills, UInteger deaths, UInteger timeSecs) {
        CalculateRankId f = new CalculateRankId();
        f.setKills(kills);
        f.setDeaths(deaths);
        f.setTimeSecs(timeSecs);

        f.execute(configuration);
        return f.getReturnValue();
    }

    /**
     * Get <code>csstats.calculate_rank_id</code> as a field.
     */
    public static Field<UInteger> calculateRankId(UInteger kills, UInteger deaths, UInteger timeSecs) {
        CalculateRankId f = new CalculateRankId();
        f.setKills(kills);
        f.setDeaths(deaths);
        f.setTimeSecs(timeSecs);

        return f.asField();
    }

    /**
     * Get <code>csstats.calculate_rank_id</code> as a field.
     */
    public static Field<UInteger> calculateRankId(Field<UInteger> kills, Field<UInteger> deaths, Field<UInteger> timeSecs) {
        CalculateRankId f = new CalculateRankId();
        f.setKills(kills);
        f.setDeaths(deaths);
        f.setTimeSecs(timeSecs);

        return f.asField();
    }

    /**
     * Call <code>csstats.calculate_skill</code>
     */
    public static Integer calculateSkill(Configuration configuration, Long kills, Long deaths) {
        CalculateSkill f = new CalculateSkill();
        f.setKills(kills);
        f.setDeaths(deaths);

        f.execute(configuration);
        return f.getReturnValue();
    }

    /**
     * Get <code>csstats.calculate_skill</code> as a field.
     */
    public static Field<Integer> calculateSkill(Long kills, Long deaths) {
        CalculateSkill f = new CalculateSkill();
        f.setKills(kills);
        f.setDeaths(deaths);

        return f.asField();
    }

    /**
     * Get <code>csstats.calculate_skill</code> as a field.
     */
    public static Field<Integer> calculateSkill(Field<Long> kills, Field<Long> deaths) {
        CalculateSkill f = new CalculateSkill();
        f.setKills(kills);
        f.setDeaths(deaths);

        return f.asField();
    }

    /**
     * Call <code>csstats.declension</code>
     */
    public static String declension(Configuration configuration, Integer value, String opt1, String opt2, String opt3) {
        Declension f = new Declension();
        f.setValue(value);
        f.setOpt1(opt1);
        f.setOpt2(opt2);
        f.setOpt3(opt3);

        f.execute(configuration);
        return f.getReturnValue();
    }

    /**
     * Get <code>csstats.declension</code> as a field.
     */
    public static Field<String> declension(Integer value, String opt1, String opt2, String opt3) {
        Declension f = new Declension();
        f.setValue(value);
        f.setOpt1(opt1);
        f.setOpt2(opt2);
        f.setOpt3(opt3);

        return f.asField();
    }

    /**
     * Get <code>csstats.declension</code> as a field.
     */
    public static Field<String> declension(Field<Integer> value, Field<String> opt1, Field<String> opt2, Field<String> opt3) {
        Declension f = new Declension();
        f.setValue(value);
        f.setOpt1(opt1);
        f.setOpt2(opt2);
        f.setOpt3(opt3);

        return f.asField();
    }

    /**
     * Call <code>csstats.is_valid_ip</code>
     */
    public static Boolean isValidIp(Configuration configuration, String ip, Byte nullable, Byte withPort) {
        IsValidIp f = new IsValidIp();
        f.setIp(ip);
        f.setNullable(nullable);
        f.setWithPort(withPort);

        f.execute(configuration);
        return f.getReturnValue();
    }

    /**
     * Get <code>csstats.is_valid_ip</code> as a field.
     */
    public static Field<Boolean> isValidIp(String ip, Byte nullable, Byte withPort) {
        IsValidIp f = new IsValidIp();
        f.setIp(ip);
        f.setNullable(nullable);
        f.setWithPort(withPort);

        return f.asField();
    }

    /**
     * Get <code>csstats.is_valid_ip</code> as a field.
     */
    public static Field<Boolean> isValidIp(Field<String> ip, Field<Byte> nullable, Field<Byte> withPort) {
        IsValidIp f = new IsValidIp();
        f.setIp(ip);
        f.setNullable(nullable);
        f.setWithPort(withPort);

        return f.asField();
    }

    /**
     * Call <code>csstats.is_valid_steamid</code>
     */
    public static Boolean isValidSteamid(Configuration configuration, String steamid, Byte nullable, Byte onlyLegal) {
        IsValidSteamid f = new IsValidSteamid();
        f.setSteamid(steamid);
        f.setNullable(nullable);
        f.setOnlyLegal(onlyLegal);

        f.execute(configuration);
        return f.getReturnValue();
    }

    /**
     * Get <code>csstats.is_valid_steamid</code> as a field.
     */
    public static Field<Boolean> isValidSteamid(String steamid, Byte nullable, Byte onlyLegal) {
        IsValidSteamid f = new IsValidSteamid();
        f.setSteamid(steamid);
        f.setNullable(nullable);
        f.setOnlyLegal(onlyLegal);

        return f.asField();
    }

    /**
     * Get <code>csstats.is_valid_steamid</code> as a field.
     */
    public static Field<Boolean> isValidSteamid(Field<String> steamid, Field<Byte> nullable, Field<Byte> onlyLegal) {
        IsValidSteamid f = new IsValidSteamid();
        f.setSteamid(steamid);
        f.setNullable(nullable);
        f.setOnlyLegal(onlyLegal);

        return f.asField();
    }

    /**
     * Call <code>csstats.player_detail</code>
     */
    public static void playerDetail(Configuration configuration, UInteger id, String name, String ip, String steamid) {
        PlayerDetail p = new PlayerDetail();
        p.setId(id);
        p.setName_(name);
        p.setIp(ip);
        p.setSteamid(steamid);

        p.execute(configuration);
    }

    /**
     * Call <code>csstats.player_detail_json</code>
     */
    public static void playerDetailJson(Configuration configuration, UInteger id, String name, String ip, String steamid) {
        PlayerDetailJson p = new PlayerDetailJson();
        p.setId(id);
        p.setName_(name);
        p.setIp(ip);
        p.setSteamid(steamid);

        p.execute(configuration);
    }

    /**
     * Call <code>csstats.player_full</code>
     */
    public static void playerFull(Configuration configuration, UInteger id, String name, String ip, String steamid) {
        PlayerFull p = new PlayerFull();
        p.setId(id);
        p.setName_(name);
        p.setIp(ip);
        p.setSteamid(steamid);

        p.execute(configuration);
    }

    /**
     * Call <code>csstats.player_full2</code>
     */
    public static void playerFull2(Configuration configuration, UInteger id, String name, String ip, String steamid) {
        PlayerFull2 p = new PlayerFull2();
        p.setId(id);
        p.setName_(name);
        p.setIp(ip);
        p.setSteamid(steamid);

        p.execute(configuration);
    }

    /**
     * Call <code>csstats.player_full2_json</code>
     */
    public static void playerFull2Json(Configuration configuration, UInteger id, String name, String ip, String steamid) {
        PlayerFull2Json p = new PlayerFull2Json();
        p.setId(id);
        p.setName_(name);
        p.setIp(ip);
        p.setSteamid(steamid);

        p.execute(configuration);
    }

    /**
     * Call <code>csstats.player_full_json</code>
     */
    public static void playerFullJson(Configuration configuration, UInteger id, String name, String ip, String steamid) {
        PlayerFullJson p = new PlayerFullJson();
        p.setId(id);
        p.setName_(name);
        p.setIp(ip);
        p.setSteamid(steamid);

        p.execute(configuration);
    }

    /**
     * Call <code>csstats.player_summary</code>
     */
    public static void playerSummary(Configuration configuration, UInteger id, String name, String ip, String steamid) {
        PlayerSummary p = new PlayerSummary();
        p.setId(id);
        p.setName_(name);
        p.setIp(ip);
        p.setSteamid(steamid);

        p.execute(configuration);
    }

    /**
     * Call <code>csstats.player_summary_json</code>
     */
    public static void playerSummaryJson(Configuration configuration, UInteger id, String name, String ip, String steamid) {
        PlayerSummaryJson p = new PlayerSummaryJson();
        p.setId(id);
        p.setName_(name);
        p.setIp(ip);
        p.setSteamid(steamid);

        p.execute(configuration);
    }
}
