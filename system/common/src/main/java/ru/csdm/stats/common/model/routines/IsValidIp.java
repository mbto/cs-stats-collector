/*
 * This file is generated by jOOQ.
 */
package ru.csdm.stats.common.model.routines;


import org.jooq.Field;
import org.jooq.Parameter;
import org.jooq.impl.AbstractRoutine;
import org.jooq.impl.Internal;
import ru.csdm.stats.common.model.Csstats;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class IsValidIp extends AbstractRoutine<Boolean> {

    private static final long serialVersionUID = -132181211;

    /**
     * The parameter <code>csstats.is_valid_ip.RETURN_VALUE</code>.
     */
    public static final Parameter<Boolean> RETURN_VALUE = Internal.createParameter("RETURN_VALUE", org.jooq.impl.SQLDataType.BOOLEAN, false, false);

    /**
     * The parameter <code>csstats.is_valid_ip.ip</code>.
     */
    public static final Parameter<String> IP = Internal.createParameter("ip", org.jooq.impl.SQLDataType.VARCHAR(21), false, false);

    /**
     * The parameter <code>csstats.is_valid_ip.nullable</code>.
     */
    public static final Parameter<Byte> NULLABLE = Internal.createParameter("nullable", org.jooq.impl.SQLDataType.TINYINT, false, false);

    /**
     * The parameter <code>csstats.is_valid_ip.with_port</code>.
     */
    public static final Parameter<Byte> WITH_PORT = Internal.createParameter("with_port", org.jooq.impl.SQLDataType.TINYINT, false, false);

    /**
     * Create a new routine call instance
     */
    public IsValidIp() {
        super("is_valid_ip", Csstats.CSSTATS, org.jooq.impl.SQLDataType.BOOLEAN);

        setReturnParameter(RETURN_VALUE);
        addInParameter(IP);
        addInParameter(NULLABLE);
        addInParameter(WITH_PORT);
    }

    /**
     * Set the <code>ip</code> parameter IN value to the routine
     */
    public void setIp(String value) {
        setValue(IP, value);
    }

    /**
     * Set the <code>ip</code> parameter to the function to be used with a {@link org.jooq.Select} statement
     */
    public void setIp(Field<String> field) {
        setField(IP, field);
    }

    /**
     * Set the <code>nullable</code> parameter IN value to the routine
     */
    public void setNullable(Byte value) {
        setValue(NULLABLE, value);
    }

    /**
     * Set the <code>nullable</code> parameter to the function to be used with a {@link org.jooq.Select} statement
     */
    public void setNullable(Field<Byte> field) {
        setField(NULLABLE, field);
    }

    /**
     * Set the <code>with_port</code> parameter IN value to the routine
     */
    public void setWithPort(Byte value) {
        setValue(WITH_PORT, value);
    }

    /**
     * Set the <code>with_port</code> parameter to the function to be used with a {@link org.jooq.Select} statement
     */
    public void setWithPort(Field<Byte> field) {
        setField(WITH_PORT, field);
    }
}
