/*
 * This file is generated by jOOQ.
 */
package ru.csdm.stats.common.model.collector.tables.records;


import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record9;
import org.jooq.Row9;
import org.jooq.impl.UpdatableRecordImpl;
import org.jooq.types.UInteger;
import ru.csdm.stats.common.model.collector.enums.ProjectDatabaseServerTimezone;
import ru.csdm.stats.common.model.collector.tables.Project;

import javax.validation.constraints.NotNull;
import javax.validation.constraints.Size;
import java.time.LocalDateTime;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ProjectRecord extends UpdatableRecordImpl<ProjectRecord> implements Record9<UInteger, String, String, LocalDateTime, String, String, String, String, ProjectDatabaseServerTimezone> {

    private static final long serialVersionUID = 812943802;

    /**
     * Setter for <code>collector.project.id</code>.
     */
    public void setId(UInteger value) {
        set(0, value);
    }

    /**
     * Getter for <code>collector.project.id</code>.
     */
    public UInteger getId() {
        return (UInteger) get(0);
    }

    /**
     * Setter for <code>collector.project.name</code>.
     */
    public void setName(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>collector.project.name</code>.
     */
    @NotNull
    @Size(max = 45)
    public String getName() {
        return (String) get(1);
    }

    /**
     * Setter for <code>collector.project.description</code>.
     */
    public void setDescription(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>collector.project.description</code>.
     */
    @Size(max = 65535)
    public String getDescription() {
        return (String) get(2);
    }

    /**
     * Setter for <code>collector.project.reg_datetime</code>.
     */
    public void setRegDatetime(LocalDateTime value) {
        set(3, value);
    }

    /**
     * Getter for <code>collector.project.reg_datetime</code>.
     */
    public LocalDateTime getRegDatetime() {
        return (LocalDateTime) get(3);
    }

    /**
     * Setter for <code>collector.project.database_hostport</code>.
     */
    public void setDatabaseHostport(String value) {
        set(4, value);
    }

    /**
     * Getter for <code>collector.project.database_hostport</code>.
     */
    @NotNull
    @Size(max = 260)
    public String getDatabaseHostport() {
        return (String) get(4);
    }

    /**
     * Setter for <code>collector.project.database_schema</code>.
     */
    public void setDatabaseSchema(String value) {
        set(5, value);
    }

    /**
     * Getter for <code>collector.project.database_schema</code>.
     */
    @NotNull
    @Size(max = 64)
    public String getDatabaseSchema() {
        return (String) get(5);
    }

    /**
     * Setter for <code>collector.project.database_username</code>.
     */
    public void setDatabaseUsername(String value) {
        set(6, value);
    }

    /**
     * Getter for <code>collector.project.database_username</code>.
     */
    @NotNull
    @Size(max = 32)
    public String getDatabaseUsername() {
        return (String) get(6);
    }

    /**
     * Setter for <code>collector.project.database_password</code>.
     */
    public void setDatabasePassword(String value) {
        set(7, value);
    }

    /**
     * Getter for <code>collector.project.database_password</code>.
     */
    @NotNull
    @Size(max = 32)
    public String getDatabasePassword() {
        return (String) get(7);
    }

    /**
     * Setter for <code>collector.project.database_server_timezone</code>.
     */
    public void setDatabaseServerTimezone(ProjectDatabaseServerTimezone value) {
        set(8, value);
    }

    /**
     * Getter for <code>collector.project.database_server_timezone</code>.
     */
    @NotNull
    public ProjectDatabaseServerTimezone getDatabaseServerTimezone() {
        return (ProjectDatabaseServerTimezone) get(8);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record1<UInteger> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record9 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row9<UInteger, String, String, LocalDateTime, String, String, String, String, ProjectDatabaseServerTimezone> fieldsRow() {
        return (Row9) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row9<UInteger, String, String, LocalDateTime, String, String, String, String, ProjectDatabaseServerTimezone> valuesRow() {
        return (Row9) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<UInteger> field1() {
        return Project.PROJECT.ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field2() {
        return Project.PROJECT.NAME;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field3() {
        return Project.PROJECT.DESCRIPTION;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<LocalDateTime> field4() {
        return Project.PROJECT.REG_DATETIME;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field5() {
        return Project.PROJECT.DATABASE_HOSTPORT;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field6() {
        return Project.PROJECT.DATABASE_SCHEMA;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field7() {
        return Project.PROJECT.DATABASE_USERNAME;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field8() {
        return Project.PROJECT.DATABASE_PASSWORD;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<ProjectDatabaseServerTimezone> field9() {
        return Project.PROJECT.DATABASE_SERVER_TIMEZONE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UInteger component1() {
        return getId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component2() {
        return getName();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component3() {
        return getDescription();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public LocalDateTime component4() {
        return getRegDatetime();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component5() {
        return getDatabaseHostport();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component6() {
        return getDatabaseSchema();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component7() {
        return getDatabaseUsername();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component8() {
        return getDatabasePassword();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ProjectDatabaseServerTimezone component9() {
        return getDatabaseServerTimezone();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UInteger value1() {
        return getId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value2() {
        return getName();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value3() {
        return getDescription();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public LocalDateTime value4() {
        return getRegDatetime();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value5() {
        return getDatabaseHostport();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value6() {
        return getDatabaseSchema();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value7() {
        return getDatabaseUsername();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value8() {
        return getDatabasePassword();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ProjectDatabaseServerTimezone value9() {
        return getDatabaseServerTimezone();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ProjectRecord value1(UInteger value) {
        setId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ProjectRecord value2(String value) {
        setName(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ProjectRecord value3(String value) {
        setDescription(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ProjectRecord value4(LocalDateTime value) {
        setRegDatetime(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ProjectRecord value5(String value) {
        setDatabaseHostport(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ProjectRecord value6(String value) {
        setDatabaseSchema(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ProjectRecord value7(String value) {
        setDatabaseUsername(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ProjectRecord value8(String value) {
        setDatabasePassword(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ProjectRecord value9(ProjectDatabaseServerTimezone value) {
        setDatabaseServerTimezone(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ProjectRecord values(UInteger value1, String value2, String value3, LocalDateTime value4, String value5, String value6, String value7, String value8, ProjectDatabaseServerTimezone value9) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        value9(value9);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached ProjectRecord
     */
    public ProjectRecord() {
        super(Project.PROJECT);
    }

    /**
     * Create a detached, initialised ProjectRecord
     */
    public ProjectRecord(UInteger id, String name, String description, LocalDateTime regDatetime, String databaseHostport, String databaseSchema, String databaseUsername, String databasePassword, ProjectDatabaseServerTimezone databaseServerTimezone) {
        super(Project.PROJECT);

        set(0, id);
        set(1, name);
        set(2, description);
        set(3, regDatetime);
        set(4, databaseHostport);
        set(5, databaseSchema);
        set(6, databaseUsername);
        set(7, databasePassword);
        set(8, databaseServerTimezone);
    }
}
